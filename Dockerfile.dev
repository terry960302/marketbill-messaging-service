# aws go image 
# FROM public.ecr.aws/docker/library/golang:alpine3.16
# LABEL Terry Kim <terry960302@gmail.com>


# WORKDIR /app

# ADD go.mod /app
# ADD go.sum /app

# RUN apk update && \
#     apk add git && \
#     go get -d ./...

# COPY . /app

# EXPOSE 8000
# ENV PROFILE=dev

# RUN go build -o main.go
# CMD ["./main"]

FROM public.ecr.aws/lambda/provided:al2 as build
# install compiler
RUN yum install -y golang
RUN go env -w GOPROXY=direct
# cache dependencies
ADD go.mod go.sum ./
RUN go mod download
# build
ADD . .
RUN go build -o /main
# copy artifacts to a clean image
FROM public.ecr.aws/lambda/provided:al2
COPY --from=build /main /main
ENTRYPOINT [ "/main" ]   